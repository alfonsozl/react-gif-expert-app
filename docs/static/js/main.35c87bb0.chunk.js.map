{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cat","type","placeholder","value","onChange","target","GifGridItem","id","title","url","console","log","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAKaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAe9C,OACI,0BAAMC,SARW,SAACC,GAClBA,EAAEC,iBAEFJ,EAAWK,OAAOC,OAAS,GAAKR,GAAe,SAAAS,GAAG,OAAMP,GAAN,mBAAqBO,OACvEN,EAAc,MAKV,2BACIO,KAAO,OACPC,YAAc,oBACdC,MAAUV,EACVW,SAjBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,YCPlBG,EAAc,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAIrC,OAFAC,QAAQC,IAAIJ,EAAIC,EAAOC,GAGnB,yBAAKG,UAAU,6CACX,yBAAKC,IAAQJ,EAAMK,IAAQN,IAC3B,2BAAKA,K,uBCTJO,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbR,EADa,iDACoCS,UAAWF,GAD/C,+DAEAG,MAAOV,GAFP,cAEbW,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHlB,GAAKkB,EAAIlB,GACTC,MAAQiB,EAAIjB,MACZC,IAAG,UAAGgB,EAAIC,cAAP,aAAG,EAAYC,iBAAiBlB,QATxB,kBAaZc,GAbY,4CAAH,sDCIPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EACdxB,mBAAS,CAC/B8B,KAAM,GACNO,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAgBxC,OAVAC,qBAAU,WACNjB,EAASC,GACJiB,MAAM,SAAAC,GACHH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAGtB,CAAEb,IAEEc,EDb0BK,CAAcnB,GAAlCU,EAFwB,EAE7BJ,KAAaO,EAFgB,EAEhBA,QAErB,OACI,oCACI,wBAAIjB,UAAY,wCAAyCI,GACvDa,GAAW,uBAAGjB,UAAY,kDAAf,cACb,yBAAKA,UAAY,aAETc,EAAOF,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIW,IAAQX,EAAIlB,IACPkB,UEYlBY,EAzBM,WAAO,IAAD,EAEa7C,mBAAS,CAAC,mBAFvB,mBAEhB8C,EAFgB,KAEJ/C,EAFI,KAMvB,OAFAmB,QAAQC,IAAI2B,GAGR,yBAAK1B,UAAU,aACX,8CACA,kBAAC,EAAD,CAAarB,cAAkBA,IAC/B,6BACA,4BAEQ+C,EAAWd,KAAK,SAAAR,GAAQ,OACpB,kBAAC,EAAD,CACIoB,IAAQpB,EACRA,SAAaA,U,MCfzCuB,IAASC,OAAQ,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.35c87bb0.chunk.js","sourcesContent":["\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setinputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setinputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        inputValue.trim().length > 2 && setCategories( cat => [ inputValue, ...cat ] );\n        setinputValue('');\n    }\n\n    return (\n        <form onSubmit = { handleSubmit }>\n            <input\n                type = 'text'\n                placeholder = \"Search something!\"\n                value = { inputValue }\n                onChange = { handleInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","\nimport React from 'react'\n\nexport const GifGridItem = ( {id, title, url} ) => {\n\n    console.log(id, title, url);\n\n    return (\n        <div className=\"card animate__animated animate__heartBeat\">\n            <img src = { url } alt = { title } ></img>\n            <p>{ title }</p>\n        </div>\n    )\n}\n","\nexport const getGifs = async ( category ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=hBnnkqHmDXl1QhjRy6d8sNoA0fo7EWD2`;\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id : img.id,\n            title : img.title,\n            url : img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n}","\nimport React from 'react';\nimport { GifGridItem } from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data:images, loading } = useFetchGifs( category );\n\n    return (\n        <>\n            <h3 className = \"animate__animated animate__headShake\">{ category }</h3>\n            { loading && <p className = \"animate__animated animate__flash animate__slow\">Loading...</p> }\n            <div className = \"card-grid\">    \n                {\n                    images.map( img => (\n                        <GifGridItem\n                            key = { img.id }\n                            { ...img }\n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n","\nimport { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs( category )\n            .then( imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            })\n    }, [ category ])\n\n    return state;\n}","\nimport React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['Rick and Morty']);\n\n    console.log(categories);\n\n    return(\n        <div className=\"container\">\n            <h2>Gif-Expert App</h2>\n            <AddCategory setCategories = { setCategories }/>\n            <hr></hr>\n            <ol>\n                {\n                    categories.map( category => (\n                        <GifGrid\n                            key = { category }\n                            category = { category }\n                        />\n                    ))\n                }\n            </ol>\n        </div>\n    );\n}\n\nexport default GifExpertApp;","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render( <GifExpertApp />, document.getElementById('root') );\n"],"sourceRoot":""}